---
import { Image } from "astro:assets";
import Layout from "../layouts/layout.astro";
import heroImage from "../assets/images/heroimage.png";
import Cardpets from "../components/card1.astro";
import Cardproducts from "../components/card2.astro";
import Cardarticles from "../components/card3.astro";
// import pets from "../data/pets.json";
// import products from "../data/products.json";
// import articles from "../data/article.json";
import Arrowleft from "../assets/icons/arrowleft.svg";
import Herobg from "../layouts/herobg.astro";
import Mediaplay from "../assets/icons/mediaplay.svg";
import Rectanglebanner from "../assets/images/categorybannerrect.svg";
import groupPuppies from "../assets/images/group-portrait-adorable-puppies1.png"

const pets = [
      {
        "name": "MO231 - Pomeranian White",
        "gender": "Male",
        "breed": "Small",
        "color": "White",
        "image": "src/assets/images/pomeranianwhite.png",
        "age": "02",
        "price": "6.900.000"
    },
    {
        "name": "MO502 - Poodle Tiny Yellow",
        "gender": "Female",
        "breed": "Small",
        "color": "Yellow",
        "image": "/src/assets/images/poodletinyyellow.png",
        "age": "02",
        "price": "3.900.000"
    },
    {
        "name": "MO102 - Poodle Tiny Sepia",
        "gender": "Male",
        "breed": "Small",
        "color": "Sepia",
        "image": "/src/assets/images/poodletinysepia.png",
        "age": "02",
        "price": "4.000.000"
    },
    {
        "name": "MO512 - Alaskan Malamute Grey",
        "gender": "Male",
        "breed": "Small",
        "color": "Grey",
        "image": "/src/assets/images/alaskamalamutegrey.png",
        "age": "02",
        "price": "8.900.000"
    },
    {
        "name": "MO231 - Pembroke Corgi Cream",
        "gender": "Male",
        "breed": "Small",
        "color": "Cream",
        "image": "/src/assets/images/pembrokecorgicream.png",
        "age": "02",
        "price": "7.900.000"
    },
    {
        "name": "MO502 - Pembroke Corgi Tricolor",
        "gender": "Female",
        "breed": "Small",
        "color": "Tricolor",
        "image": "/src/assets/images/pembrokecorgitricolor.png",
        "age": "02",
        "price": "9.000.000"
    },
    {
        "name": "MO231 - Pomeranian White",
        "gender": "Female",
        "breed": "Small",
        "color": "White",
        "image": "/src/assets/images/pomeranianwhite2.png",
        "age": "02",
        "price": "6.500.000"
    },
    {
        "name": "MO512 - Poodle Tiny Dairy Cow",
        "gender": "Male",
        "breed": "Small",
        "color": "Black",
        "image": "/src/assets/images/poodletinydairycow.png",
        "age": "02",
        "price": "5.000.000"
    }
];
---

<Layout>
    <section id="categorybanner" class="">
  <div class="relative flex bg-secondary-40 text-neutral-0 justify-between rounded-2xl h-95 max-w-7xl px-20 mx-auto overflow-hidden">
    <Rectanglebanner class="absolute right-0 top-0 z-10 rounded-2xl" />

    <!-- Image Side -->
    <div class="relative flex items-end w-3/5 z-10">
      <Image
        src={groupPuppies}
        alt="group of puppies"
        class="w-full object-contain"
      />
    </div>

    <!-- Text Side -->
    <div class="flex flex-col justify-center gap-6 items-end w-2/5 z-10">
      <div class="flex flex-col gap-6 items-end">
        <!-- Introduction -->
        <div class="flex flex-col font-bold items-end">
          <h1 class="font-extrabold text-[3.25rem]">One More Friend</h1>
          <h2 class="font-bold text-4xl">Thousands More Fun!</h2>
        </div>

        <!-- Description -->
        <p class="text-end text-[12px] text-neutral-20 pl-15">
          Having a pet means you have more joy, a new friend, a happy
          person who will always be with you to have fun. We have 200+
          different pets that can meet your needs!
        </p>

        <!-- Buttons -->
        <div class="flex gap-5">
          <button class="flex items-center border rounded-full border-neutral-0 text-neutral-0 px-7 py-2 gap-2">
            View intro
            <Mediaplay class="border-1 rounded-full" />
          </button>
          <button class="bg-neutral-0 text-primary rounded-full px-7 py-4">
            Explore Now
          </button>
        </div>
      </div>
    </div>
  </div>
</section>

<section class="max-w-7xl mx-auto px-6 py-10">
    <div class="grid grid-cols-12 gap-6">
      <!-- Sidebar -->
      <aside class="col-span-3 bg-white p-4 rounded-xl shadow">
        <h2 class="font-bold mb-4">Filter</h2>

        <!-- Gender -->
        <div>
          <p class="font-semibold">Gender</p>
          <label><input type="checkbox" value="Male" class="filter-gender"> Male</label><br>
          <label><input type="checkbox" value="Female" class="filter-gender"> Female</label>
        </div>

        <!-- Color -->
        <div class="mt-4">
          <p class="font-semibold">Color</p>
          <label><input type="checkbox" value="White" class="filter-color"> White</label><br>
          <label><input type="checkbox" value="Black" class="filter-color"> Black</label><br>
          <label><input type="checkbox" value="Cream" class="filter-color"> Cream</label><br>
          <label><input type="checkbox" value="Grey" class="filter-color"> Grey</label>
        </div>

        <!-- Breed -->
        <div class="mt-4">
          <p class="font-semibold">Breed</p>
          <label><input type="checkbox" value="Small" class="filter-breed"> Small</label><br>
          <label><input type="checkbox" value="Medium" class="filter-breed"> Medium</label><br>
          <label><input type="checkbox" value="Large" class="filter-breed"> Large</label>
        </div>

        <!-- Price -->
        <div class="mt-4">
  <p class="font-semibold">Price</p>
  <div class="flex items-center gap-2">
    <input 
      type="number" 
      class="filter-price-min w-28 border rounded p-1 text-sm"
      placeholder="Min"
      min="0"
      step="500000"
    />
    <span>â€“</span>
    <input 
      type="number" 
      class="filter-price-max w-28 border rounded p-1 text-sm"
      placeholder="Max"
      min="0"
      step="500000"
    />
  </div>
</div>
      </aside>

      <!-- Product Grid -->
      <div class="col-span-9">
        <h2 class="text-2xl font-bold mb-6" id="categoryTitle">All Dogs</h2>
        <div id="dogGrid" class="grid grid-cols-3 gap-6">
          {pets.map((pet) => (
            <div
              class="product-card"
              data-gender={pet.gender}
              data-breed={pet.breed}
              data-color={pet.color}
              data-price={pet.price}
            >
              <Cardpets {...pet} />
            </div>
          ))}
        </div>
      </div>
    </div>
  </section>
</Layout>

<script>
  const grid = document.getElementById("dogGrid");
  const priceValue = document.getElementById("priceValue");

  function filterDogs() {
    // Get selected filters
    const genders = [...document.querySelectorAll(".filter-gender:checked")].map(cb => cb.value);
    const colors  = [...document.querySelectorAll(".filter-color:checked")].map(cb => cb.value);
    const breeds  = [...document.querySelectorAll(".filter-breed:checked")].map(cb => cb.value);

    const minPrice = parseInt(document.querySelector(".filter-price-min")?.value || "0", 10);
    const maxPrice = parseInt(document.querySelector(".filter-price-max")?.value || "999999999", 10);

    if (!grid) return; // stop if grid not found

    // Loop through cards
    grid.querySelectorAll(".product-card").forEach(card => {
      const cardPrice = parseInt(card.dataset.price?.replace(/\./g, "") || "0", 10);
      const matchGender = !genders.length || genders.includes(card.dataset.gender || "");
      const matchColor  = !colors.length || colors.includes(card.dataset.color || "");
      const matchBreed  = !breeds.length || breeds.includes(card.dataset.breed || "");
      const matchPrice  = cardPrice >= minPrice && cardPrice <= maxPrice;

      card.style.display = (matchGender && matchColor && matchBreed && matchPrice) 
    ? "block" 
    : "none";
});
  }

  // Attach listeners
  document.querySelectorAll("input").forEach(input => {
    input.addEventListener("input", filterDogs);
    input.addEventListener("change", filterDogs);
  });

  // Run once on load
  filterDogs();
</script>
